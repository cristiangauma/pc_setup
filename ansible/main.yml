---
- hosts: all
  tasks:
    - name: Update all packages
      become: yes
      community.general.zypper:
        name: '*'
        state: latest

    - name: Install desired system packages
      become: yes
      community.general.zypper:
        name: 
          - automake
          - bat
          - bzip2
          - colordiff
          - curl
          - gcc
          - git
          - gnome-keyring
          - htop
          - jq
          - libbz2-devel
          - libffi-devel
          - lsd
          - make
          - minikube
          - minikube-bash-completion
          - mono-complete
          - multitail
          - ncdu
          - ncurses-devel
          - onedrive
          - openssl-devel
          - pyenv
          - rclone
          - readline-devel
          - sqlite3-devel
          - tealdeer
          - telnet
          - tk-devel
          - virtualbox
          - whois
          - xz
          - xz-devel
          - yast2-docker
          - yq
          - zlib-devel
          - zsh

    - name: Install pip packages
      ansible.builtin.pip:
        name:
          - awscli
          - pipenv
          - localstack
          - terraform-local
          - awscli-local
          - pyenv
          - requests
          - jsonpickle
          - urllib3
          - fabric3

    - name: Ensure fonts directory exist.
      file:
        path: "{{ lookup('env', 'HOME') }}/.fonts"
        state: directory

    - name: Ensure hack fonts exist
      shell: "ls {{ lookup('env', 'HOME') }}/.fonts/Hack*Nerd*Font*Complete*"
      register: hack_exists
      ignore_errors: yes

    - name: Download Hack nerd font
      when: hack_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip
        dest: "{{ lookup('env', 'HOME') }}/.fonts/"
        remote_src: yes

    - name: Install oh-my-zsh for my user
      ansible.builtin.include_role:
        name: gantsign.oh-my-zsh
      vars:
        users:
          - username: cristian
            oh_my_zsh:
              plugins:
                - colored-man-pages
                - command-not-found
                - docker
                - pep8
                - pip
                - sudo
              theme: powerlevel10k/powerlevel10k

    - name: Install powerlevel10k
      ansible.builtin.shell: git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
      args:
        creates: $HOME/.oh-my-zsh/custom/themes/powerlevel10k/README.md

    - name: Add the flathub flatpak repository remote to the user installation
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo

    - name: Install desired flatpak from flathub
      become: yes
      community.general.flatpak:
        name:
          - com.bitwarden.desktop
          - com.getpostman.Postman
          - com.github.tchx84.Flatseal
          - com.github.unrud.VideoDownloader
          - com.jgraph.drawio.desktop
          - com.microsoft.Edge
          - com.spotify.Client
          - net.ankiweb.Anki
          - net.cozic.joplin_desktop
          - org.cryptomator.Cryptomator
          - org.ferdium.Ferdium
          - org.filezillaproject.Filezilla
          - org.gimp.GIMP
          - org.gnome.meld
          - org.kde.krdc
          - org.kde.krita
          - org.mozilla.Thunderbird
          - org.telegram.desktop
          - org.wireshark.Wireshark
          - com.github.muriloventuroso.easyssh
          - io.dbeaver.DBeaverCommunity
          - io.dbeaver.DBeaverCommunity.Client.pgsql
          - org.raspberrypi.rpi-imager
          - org.remmina.Remmina
          - org.keepassxc.KeePassXC
          - org.gnome.Boxes
          - org.gnome.Boxes.Extension.OsinfoDb

    - name: Configure shell and groups in my user
      become: yes
      ansible.builtin.user:
        name: "cristian"
        shell: /bin/zsh
        groups:
          - docker
          - vboxusers
        append: yes

    - name: Add custon zsh configuration in a separated file
      ansible.builtin.lineinfile:
        path: "{{ lookup('env', 'HOME') }}/.zshrc"
        line: ". ~/.zsh_custom_configuration"
        owner: cristian
        regexp: '^\. ~/\.zsh_custom_configuration$'
        state: present
        insertafter: EOF
        create: True
    
    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/bin"
        state: directory
        mode: '0755'
      
    - name: Install Just command
      ansible.builtin.shell: curl https://just.systems/install.sh | bash -s -- --to {{ lookup('env', 'HOME') }}/bin/
      args:
        creates: "{{ lookup('env', 'HOME') }}/bin/just"

    - name: Install kubectl
      ansible.builtin.shell: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      args:
        creates: "{{ lookup('env', 'HOME') }}/bin/kubectl"

    - name: Ensure ~/.custom_zsh_configuration exists with the desired content
      ansible.builtin.copy:
        src: files/zsh_custom_configuration
        dest: "{{ lookup('env', 'HOME') }}/.zsh_custom_configuration"
        owner: cristian
        group: cristian
        mode: '0644'

    - name: Update tldr cache
      ansible.builtin.shell: tldr --update

    - name: Start and enable docker service.
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes